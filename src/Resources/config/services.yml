services:
    Ynlo\GraphQLBundle\Component\TaggedServices\TaggedServices:
        arguments: [ '@service_container' ]

    Ynlo\GraphQLBundle\EventListener\CorsListener:
        tags:
          - { name: 'kernel.event_subscriber' }

    Ynlo\GraphQLBundle\Schema\SchemaCompiler:
        arguments: ['@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']
        calls:
          - [ setContainer, ['@service_container']]

    Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry:
        arguments: ['@Ynlo\GraphQLBundle\Component\TaggedServices\TaggedServices', '%kernel.cache_dir%']

    Ynlo\GraphQLBundle\Definition\Loader\AnnotationLoader:
        arguments: ['@service_container']
        tags:
            - { name: 'graphql.definition_loader' }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\ObjectTypeAnnotationParser:
        arguments: ['@Ynlo\GraphQLBundle\Component\TaggedServices\TaggedServices','@Ynlo\GraphQLBundle\Definition\ConnectionDefinitionBuilder']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 200}

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryGetNodeAnnotationParser:
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 150 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryGetAllNodesAnnotationParser:
        arguments: ['@Ynlo\GraphQLBundle\Definition\ConnectionDefinitionBuilder']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 150 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\QueryAnnotationParser:
        arguments: ['@Ynlo\GraphQLBundle\Definition\ConnectionDefinitionBuilder']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationAnnotationParser:
        arguments: ['@form.factory']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationAddAnnotationParser:
        arguments: ['@form.factory']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationUpdateAnnotationParser:
        arguments: ['@form.factory']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\MutationDeleteAnnotationParser:
        arguments: ['@form.factory']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\FieldConnectionAnnotationParser:
        arguments: ['@Ynlo\GraphQLBundle\Definition\ConnectionDefinitionBuilder']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.definition_resolver', priority: 50 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\FieldDecorator\GraphQLFieldDefinitionDecorator:
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.field_definition_decorator', priority: 100 }

    Ynlo\GraphQLBundle\Definition\Loader\Annotation\FieldDecorator\DoctrineFieldDefinitionDecorator:
        arguments: ['@Ynlo\GraphQLBundle\Component\TaggedServices\TaggedServices']
        calls:
            - [ setReader, ['@annotations.reader']]
        tags:
            - { name: 'graphql.field_definition_decorator' }

    Ynlo\GraphQLBundle\Definition\ConnectionDefinitionBuilder:
        arguments: ['@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']
        shared: false

    Ynlo\GraphQLBundle\Type\TypeAutoLoader:
        calls:
          - [ setContainer, ['@service_container']]

    Ynlo\GraphQLBundle\Form\TypeGuesser\GraphQLIDTypeGuesser:
        arguments: ['@annotations.reader']
        tags: [form.type_guesser]

    Ynlo\GraphQLBundle\Form\Type\IDType:
        arguments: ['@Doctrine\ORM\EntityManagerInterface', '@Ynlo\GraphQLBundle\Definition\Registry\DefinitionRegistry']
        tags: [form.type]